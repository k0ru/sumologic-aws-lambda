AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: '"Lambda Function for automatic subscription of any Sumo Logic lambda
  function with loggroups matching an input pattern."

  '
Globals:
  Function:
    Timeout: 300
    MemorySize: 128
Metadata:
  AWS::ServerlessRepo::Application:
    Author: Sumo Logic
    Description: Lambda Function for automatic subscription of any Sumo Logic lambda
      function with loggroups matching an input pattern.
    HomePageUrl: https://github.com/SumoLogic/sumologic-aws-lambda
    Labels:
    - lambda
    - sumologic
    - autosubscribe
    - serverless
    - loggroups
    - cloudwatch
    LicenseUrl: s3://appdevstore/LoggroupConnector/v1.0.3/5122657d5b9a0d3713e24d3a33eae431
    Name: sumologic-loggroup-connector
    ReadmeUrl: s3://appdevstore/LoggroupConnector/v1.0.3/c98f2c0d986a3f55fbea539688ee6a2e
    SemanticVersion: 1.0.3
    SourceCodeUrl: https://github.com/SumoLogic/sumologic-aws-lambda/loggroup-lambda-connector
    SpdxLicenseId: Apache-2.0
Parameters:
  LambdaARN:
    Type: String
    Default: arn:aws:lambda:us-east-1:123456789000:function:TestLambda
    Description: Enter ARN for target lambda function
  LogGroupPattern:
    Type: String
    Default: Test
    Description: Enter regex for matching logGroups
  UseExistingLogs:
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
    Description: Select true for subscribing existing logs
  LogGroupTags:
    Type: CommaDelimitedList
    Description: 'Enter comma separated keyvalue pairs for filtering logGroups using
      tags. Ex KeyName1=string,KeyName2=string '
Resources:
  SumoLogGroupLambdaConnector:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://appdevstore/LoggroupConnector/v1.0.3/fef3de66919bef9861be16f25aec0343
      Handler: loggroup-lambda-connector.handler
      Runtime: nodejs10.x
      Environment:
        Variables:
          LAMBDA_ARN:
            Ref: LambdaARN
          LOG_GROUP_PATTERN:
            Ref: LogGroupPattern
          USE_EXISTING_LOG_GROUPS:
            Ref: UseExistingLogs
          LOG_GROUP_TAGS:
            Fn::Join:
            - ','
            - Ref: LogGroupTags
      Policies:
      - Statement:
        - Sid: ReadWriteFilterPolicy
          Effect: Allow
          Action:
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:PutSubscriptionFilter
          Resource:
          - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
      Events:
        LambdaTrigger:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - aws.logs
              detail:
                eventSource:
                - logs.amazonaws.com
                eventName:
                - CreateLogGroup
  SumoCWLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LambdaARN
      Principal:
        Fn::Sub: logs.${AWS::Region}.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*
Outputs:
  SumoLogGroupLambdaConnector:
    Description: SumoLogGroupLambdaConnector Function ARN
    Value:
      Fn::GetAtt:
      - SumoLogGroupLambdaConnector
      - Arn
